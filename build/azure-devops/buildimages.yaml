parameters:
  services: ""
  registryEndpoint: ""
  helmfrom: ""
  helmto: ""

jobs:
  - job: BuildContainersForPR_Linux
    condition: eq('${{ variables['Build.Reason'] }}', 'PullRequest')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: docker-compose -f src/docker-compose.yml build ${{ parameters.services }}
        displayName: Compose build ${{ parameters.services }}
        env:
          TAG: ${{ variables['Build.SourceBranchName'] }}

  - job: BuildContainersForPR_Arm32
    condition: eq('${{ variables['Build.Reason'] }}', 'PullRequest')
    pool:
      name: "arm32"
    steps:
      - bash: docker-compose f src/docker-compose.yml build ${{ parameters.services }}
        displayName: Compose build ${{ parameters.services }}
        env:
          TAG: ${{ variables['Build.SourceBranchName'] }}
          PLATFORM: arm32

  - job: BuildLinux
    condition: ne('${{ variables['Build.Reason'] }}', 'PullRequest')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - task: DockerCompose@0
        displayName: Compose build ${{ parameters.services }}
        inputs:
          dockerComposeCommand: "build ${{ parameters.services }}"
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
          dockerComposeFile: src/docker-compose.yml
          qualifyImageNames: true
          projectName: ""
          dockerComposeFileArgs: |
            TAG=${{ variables['Build.SourceBranchName'] }}
      - task: DockerCompose@0
        displayName: Compose push ${{ parameters.images }}
        inputs:
          dockerComposeCommand: "push ${{ parameters.services }}"
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
          dockerComposeFile: src/docker-compose.yml
          qualifyImageNames: true
          projectName: ""
          dockerComposeFileArgs: |
            TAG=${{ variables['Build.SourceBranchName'] }}
      - task: CopyFiles@2
        inputs:
          sourceFolder: ${{ parameters.helmfrom }}
          targetFolder: ${{ parameters.helmto }}
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: ${{ parameters.helmto }}
          artifactName: helm

  - job: BuildArm32
    condition: ne('${{ variables['Build.Reason'] }}', 'PullRequest')
    pool:
      name: "arm32"
    steps:
      - task: DockerCompose@0
        displayName: Compose build ${{ parameters.services }}
        inputs:
          dockerComposeCommand: "build ${{ parameters.services }}"
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
          dockerComposeFile: src/docker-compose.yml
          qualifyImageNames: true
          projectName: ""
          dockerComposeFileArgs: |
            TAG=${{ variables['Build.SourceBranchName'] }}
            PLATFORM=arm32
            NODE_IMAGE=arm32v7/node:10
      - task: DockerCompose@0
        displayName: Compose push ${{ parameters.services }}
        inputs:
          dockerComposeCommand: "push ${{ parameters.services }}"
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
          dockerComposeFile: src/docker-compose.yml
          qualifyImageNames: true
          projectName: ""
          dockerComposeFileArgs: |
            TAG=${{ variables['Build.SourceBranchName'] }}
            PLATFORM=arm32
