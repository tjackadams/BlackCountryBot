// <auto-generated />
using System;
using BlackCountryBot.Core.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bot.API.Migrations
{
    [DbContext(typeof(BotContext))]
    [Migration("20200316132356_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:bot.translationseq", "'translationseq', 'bot', '1', '10', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Bot.Domain.AggregatesModel.TranslationAggregate.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:HiLoSequenceName", "translationseq")
                        .HasAnnotation("Npgsql:HiLoSequenceSchema", "bot")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("LastTweetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OriginalPhrase")
                        .IsRequired()
                        .HasColumnType("character varying(140)")
                        .HasMaxLength(140);

                    b.Property<string>("TranslatedPhrase")
                        .IsRequired()
                        .HasColumnType("character varying(140)")
                        .HasMaxLength(140);

                    b.Property<int>("TweetCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("translations","bot");
                });

            modelBuilder.Entity("Bot.Infrastructure.Idempotency.ClientRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("requests","bot");
                });
#pragma warning restore 612, 618
        }
    }
}
