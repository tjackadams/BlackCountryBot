<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>3bc55a89-1e00-44eb-b736-821d2e02bce8</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <TrimUnusedDependencies>true</TrimUnusedDependencies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.1.1" />
    <PackageReference Include="DryIoc.Microsoft.DependencyInjection" Version="3.0.3" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.4.0" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.7.9" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Polly" Version="7.1.0" />
    <PackageReference Include="Scrutor" Version="3.0.2" />
    <PackageReference Include="Microsoft.Packaging.Tools.Trimming" Version="1.1.0-preview1-26619-01" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\build\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\build\**" />
    <EmbeddedResource Remove="ClientApp\build\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\build\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\build\asset-manifest.json" />
    <None Remove="ClientApp\build\favicon.ico" />
    <None Remove="ClientApp\build\index.html" />
    <None Remove="ClientApp\build\manifest.json" />
    <None Remove="ClientApp\build\precache-manifest.0d8c95624c375e3d1a154feaf7531c25.js" />
    <None Remove="ClientApp\build\service-worker.js" />
    <None Remove="ClientApp\build\static\js\2.56633a36.chunk.js" />
    <None Remove="ClientApp\build\static\js\2.56633a36.chunk.js.map" />
    <None Remove="ClientApp\build\static\js\main.06ce2da5.chunk.js" />
    <None Remove="ClientApp\build\static\js\main.06ce2da5.chunk.js.map" />
    <None Remove="ClientApp\build\static\js\runtime~main.a8a9905a.js" />
    <None Remove="ClientApp\build\static\js\runtime~main.a8a9905a.js.map" />
    <None Remove="ClientApp\build\static\media\Black_Country_Flag.a076a900.svg" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BlackCountryBot.Tweet.Container\BlackCountryBot.Core\BlackCountryBot.Core.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
